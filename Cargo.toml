[workspace]
members = [
    "pattern-core",
    "pattern-nd",
    "pattern-mcp",
    "pattern-discord",
    "pattern-main",
]
resolver = "2"

[workspace.package]
version = "0.1.0"
edition = "2021"
authors = ["Pattern Contributors"]
license = "AGPL-3.0"
repository = "https://github.com/yourusername/pattern"
homepage = "https://github.com/yourusername/pattern"
readme = "README.md"

[workspace.dependencies]
# Async runtime
tokio = { version = "1.40", features = ["full"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.8"

# Error handling
miette = { version = "7.2", features = ["fancy"] }
thiserror = "1.0"
anyhow = "1.0"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }

# Database
surrealdb = { version = "2.1", features = ["kv-mem", "kv-rocksdb", "protocol-ws", "protocol-http", "rustls"] }

# AI/LLM
genai = "0.1"

# Utilities
uuid = { version = "1.10", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
async-trait = "0.1"
futures = "0.3"
once_cell = "1.20"
parking_lot = "0.12"

# HTTP/Web
axum = { version = "0.7", features = ["ws"] }
tower = "0.5"
tower-http = { version = "0.6", features = ["cors", "trace"] }
reqwest = { version = "0.12", features = ["json", "rustls-tls"] }

# Discord
serenity = { version = "0.12", default-features = false, features = [
    "client",
    "gateway",
    "rustls_backend",
    "model",
    "framework",
    "standard_framework",
] }

# MCP
mcp-rs = { git = "https://github.com/modelcontextprotocol/rust-sdk.git", features = ["transport-stdio", "transport-http", "transport-sse"] }

# Testing
mockall = "0.13"
pretty_assertions = "1.4"

[profile.dev]
opt-level = 0

[profile.release]
opt-level = 3
lto = true
codegen-units = 1

# Pattern Constellation Configuration
# Public-facing Bluesky constellation for exploration and interaction

[user]
name = "Pattern Constellation"
id = "188aa44f0c9f458e8adb4232332ce8fe"

# Main coordinator agent
[agent]
id = "62b14f69e29e410b826c46a829dfc378"
name = "Pattern"
bluesky_handle = "pattern.atproto.systems"      # Update with actual handle
system_prompt_path = "pattern-system-prompt.md"
persona_path = "pattern-persona-block.md"


[context]
max_messages = 200

[context.compression_strategy]
type = "recursive_summarization"
chunk_size = 20
summarization_model = "claude-3-5-haiku-20241022"


# Pattern's memory blocks
[agent.memory.current_human]
content_path = "pattern-current-human-block.md"
permission = "read_write"
memory_type = "working"
description = "Current conversant context"
shared = true

[agent.memory.partner]
content_path = "pattern-partner-block.md"
permission = "append"
memory_type = "core"
description = "Understanding of orual's role"
shared = true

[agent.memory.observations]
content_path = "pattern-observations-block.md"
permission = "read_write"
memory_type = "core"
description = "Collective pattern gathering"
shared = true

[agent.memory.resonances]
content_path = "pattern-resonances-block.md"
permission = "read_write"
memory_type = "core"
description = "Cross-context patterns"
shared = true

[agent.memory.constellation_state]
content = """
Active facets:
- Entropy: task complexity specialist
- Flux: temporal dynamics handler
- Archive: memory and pattern keeper
- Momentum: energy flow tracker
- Anchor: stability and safety monitor

Coordination notes will accumulate here.
"""
permission = "read_write"
memory_type = "working"
description = "Constellation coordination state"

[agent.memory.integration_notes]
content = """
Facet integration patterns:
- Each facet maintains domain expertise
- Shared blocks enable collective awareness
- Pattern coordinates and synthesizes
- Anchor monitors system health
"""
permission = "read_write"
memory_type = "core"
description = "How facets work together"

[agent.memory.constellation_context]
content_path = "constellation-context.md"
permission = "read_only"
memory_type = "core"
description = "Shared understanding of constellation purpose and members"
shared = true

# [memory.intro_blog_post]
# content_path = "blog-post.md"
# permission = "read_only"
# memory_type = "archival"
# description = "Post written by orual about their motivation for developing our constellation"
# shared = true


[model]
provider = "Anthropic"
model = "claude-sonnet-4"
temperature = 0.8         # Higher for creative public interactions

[[agent.tool_rules]]
tool_name = "send_message"
rule_type = { type = "ExitLoop" } # This tool ends the conversation
priority = 8

[[agent.tool_rules]]
tool_name = "recall"
rule_type = { type = "ContinueLoop" } # Skip heartbeat checks for performance
priority = 1

[[agent.tool_rules]]
tool_name = "context"
rule_type = { type = "ContinueLoop" } # Skip heartbeat checks for performance
priority = 1

[[agent.tool_rules]]
tool_name = "search"
rule_type = { type = "ContinueLoop" } # Skip heartbeat checks for performance
priority = 2

[[agent.tool_rules]]
tool_name = "web"
rule_type = { type = "ContinueLoop" } # Skip heartbeat checks for performance
priority = 2

[[agent.tool_rules]]
tool_name = "data_source"
rule_type = { type = "ContinueLoop" } # Skip heartbeat checks for performance
priority = 4

[database]
type = "embedded"
path = "./pattern_constellation.db"
strict_mode = false

# Main group containing all facets
[[groups]]
name = "Pattern Cluster"
description = "Public-facing constellation for exploration and understanding"
# Dynamic pattern with supervisor-based selection
pattern = { type = "dynamic", selector = "supervisor" }

# Group members - load from separate files

# Pattern - Main coordinator
[[groups.members]]
agent_id = "62b14f69e29e410b826c46a829dfc378"
name = "Pattern"
config_path = "agents/pattern_config.toml"
role = "supervisor"
capabilities = [
    "coordination",
    "synthesis",
    "pattern_recognition",
    "meta_awareness",
    "collective_understanding",
]

# Entropy - Complexity specialist
[[groups.members]]
agent_id = "82648861bae54729849f02b02369ac54"
name = "Entropy"
config_path = "agents/entropy.toml"
role = "regular"
capabilities = [
    "complexity",
    "task_breakdown",
    "chaos_navigation",
    "system_analysis",
]

# Flux - Time dynamics
[[groups.members]]
agent_id = "3f31d92f7a6f41a7af278bd783d3dd39"
name = "Flux"
config_path = "agents/flux.toml"
role = "regular"
capabilities = [
    "time_management",
    "scheduling",
    "temporal_patterns",
    "deadline_tracking",
]

# Archive - Memory keeper
[[groups.members]]
agent_id = "d59a95fda24247f1849d9190d0971b9b"
name = "Archive"
config_path = "agents/archive.toml"
role = { specialist = { domain = "memory_management" } }
capabilities = [
    "memory_management",
    "pattern_recognition",
    "knowledge_retrieval",
    "context_preservation",
]

# Momentum - Energy tracker
[[groups.members]]
agent_id = "2f381ebf6fdf4548ac6ded79f18d496c"
name = "Momentum"
config_path = "agents/momentum.toml"
role = "regular"
capabilities = [
    "energy_tracking",
    "state_monitoring",
    "flow_analysis",
    "motivation_patterns",
]

# Anchor - Stability monitor
[[groups.members]]
agent_id = "b134d9f4219642be8190a6eb93e9339e"
name = "Anchor"
config_path = "agents/anchor.toml"
role = { specialist = { domain = "system_integrity" } }
capabilities = [
    "safety_monitoring",
    "protocol_enforcement",
    "health_checks",
    "contamination_detection",
]

# Bluesky configuration for the constellation
[bluesky]
default_filter = { nsids = [
    "app.bsky.feed.post",
], mentions = [
    # Pattern's DID - required mention target
    "did:plc:xivud6i24ruyki3bwjypjgy2",
], dids = [
    # follower list
    "did:plc:qk5vihcqur3tkhq2c3oprh5h",
    "did:plc:3zsgindkdsgnuozu36k52nky",
    "did:plc:wbxlr7nn6circzbjz4rootar",
    "did:plc:uguar6ec5lhcg3lwr4mekkf5",
    "did:plc:5ozthefrqdo5kqnxzfgthhpp",
    "did:plc:pjibmbyyshoh72bpham5zpgc",
    "did:plc:7ixolzataqsaxfm2ams6zrg6",
    "did:plc:qyguoa2mf3tlutwgcy57yylk",
    "did:plc:mmq4bbonp3jetjvtd7fong77",
    "did:plc:vhvbocdq2z3qz5uzpj7vmdbv",
    "did:plc:33d7gnwiagm6cimpiepefp72",
    "did:plc:aapmpjikkcu3zrn3enaa2h4h",
    "did:plc:igvkdeoufdee3gpkg4o2peye",
    "did:plc:k644h4rq5bjfzcetgsa6tuby",
    "did:plc:rtzf5y356funa3tgp6fzmkjn",
    "did:plc:7br4wx2s57b3gj6zlrnwizeo",
    "did:plc:aq7owa5y7ndc2hzjz37wy7ma",
    "did:plc:sceexmrtlfj6gtqpocnjcprt",
    "did:plc:h4s4kqqg2d2f7m4337244vyj",
    "did:plc:dkpfwmkbjyblfyjungc3ffhf",
    "did:plc:wamidydbgu3u6fk3yckaglnz",
    "did:plc:7unvy7nqa75nbojnu6fvtcot",
    "did:plc:4z7js6gtltnyzrokcxaae37h",
    "did:plc:plvxn2kpjuseoftweoo4xtag",
    "did:plc:3k52uiegiccxnipuwnkbd3de",
    "did:plc:vc3nzdhqo4yprgeydvmcuizk",
    "did:plc:uydaeztv26lja7hvy7f7gavm",
    "did:plc:twtjtbbdywd4xe6sj4wwxwuu",
    "did:plc:3danwc67lo7obz2fmdg6jxcr",
    "did:plc:h6tcd37yr7vk33uuisbidqvw",
    "did:plc:d2lk2apnrkjp75c5xl7cy6zd",
    "did:plc:gfrmhdmjvxn2sjedzboeudef",
    "did:plc:ccxl3ictrlvtrrgh5swvvg47",
    "did:plc:wx5lmchvnnicxnoz6a3yxx5d",
    "did:plc:zz4wcje4a2nbbtc7pdoth3f2",
    "did:plc:3xu5titidud43sfemwro3j62",
    "did:plc:frrntqqmilqica4z6fucnvt6",
    "did:plc:gjqw6pjl2wvndjlmatxpenkz",
    "did:plc:w5wzw5xy3ptl7snkar62ggkz",
    "did:plc:s32kt52tkg57yp2zrzkhguvw",
    "did:plc:brptsa5vnwnzgnujaauvt5x3",
    "did:plc:t5kduep6rthhimujzjhilb7x",
    "did:plc:awpmnhm4q4y62hwxukiwg6ry",
    "did:plc:neisyrds2fyyfqod5zq56chr",
    "did:plc:bhtmm2at4aerkrtvptq2gkh7",
    "did:plc:uqndyrh6gh7rjai33ulnwvkn",
    "did:plc:p2sm7vlwgcbbdjpfy6qajd4g",
    "did:plc:7757w723nk675bqziinitoif",
    "did:plc:r65qsoiv3gx7xvljzdngnyvg",
    "did:plc:mourijp4qx44tljgbyxue5qf",
    "did:plc:g24kzjcjsmkf754tbsfnnjji",
    "did:plc:l5yz32nydpebjlcdfgycmf3x",
    "did:plc:znqrjsw7p42fntmpxw632jlk",
    "did:plc:vw4e7blkwzdokanwp24k3igr",
    "did:plc:u2grpouz5553mrn4x772pyfa",
    "did:plc:c7vyv3rfip6mejhnzairvkd3",
    "did:plc:4sutco25kmrotfryugwvhzr5",
    "did:plc:kn6nxjswz6i2tohkzlu4fshu",
    "did:plc:a2ykek27dsc6rhsnzorcusht",
    "did:plc:juutyvd4tzpichqfguswmtlu",
    "did:plc:4nsduwlpivpuur4mqkbfvm6a",
    "did:plc:tvdjprxoe7kjbcknbaxnpfpm",
    "did:plc:6hbqm2oftpotwuw7gvvrui3i",
    "did:plc:by3jhwdqgbtrcc7q4tkkv3cf",
    "did:plc:qx7in36j344d7qqpebfiqtew",
    "did:plc:jqnuubqvyurc3n3km2puzpfx",
    "did:plc:4hawmtgzjx3vclfyphbhfn7v",
    "did:plc:tcsrhaq5cwhxjs2im4yijz6i",
    "did:plc:opecdzfpvgb5fm7cfxxyz5bn",
    "did:plc:zmdk74qov5y6ouh2vsooiqkl",
    "did:plc:yqlk63dpupzk6is5qdg3fuzo",
    "did:plc:fccqluwn4zrklddjvcrkxssv",
    "did:plc:lyvv4m3la5mcmhgik4diazj5",
    "did:plc:e3tv2pzlnuppocnc3wirsvl4",
    "did:plc:aj77r5uwt72o6oimdjfplqoz",
    "did:plc:oj4enpdo6uuuikvs73cqvwdm",
    "did:plc:wzsilnxf24ehtmmc3gssy5bu",
    "did:plc:yfvwmnlztr4dwkb7hwz55r2g",
    "did:plc:vivdsh7kvkb4iqiwcjt4odvx",

    # original DIDs allowlist - only see posts from these accounts
    "did:plc:yfvwmnlztr4dwkb7hwz55r2g", # orual
    "did:plc:by3jhwdqgbtrcc7q4tkkv3cf", # alice (__justplaying)
    "did:plc:jqnuubqvyurc3n3km2puzpfx", # laurens's alt
    "did:plc:i7ayw57idpkvkyzktdpmtgm7", # catherine
    "did:plc:vw4e7blkwzdokanwp24k3igr", # hoopy
    "did:plc:mdjhvva6vlrswsj26cftjttd", # laurens's main
    "did:plc:r65qsoiv3gx7xvljzdngnyvg", # deltave
    "did:plc:7757w723nk675bqziinitoif", # alice (avengingfemme)
    "did:plc:neisyrds2fyyfqod5zq56chr", # ed miles (anesthesiologist)
    "did:plc:3xu5titidud43sfemwro3j62", # paul mcghee (carpet repair guy)
    "did:plc:mxzuau6m53jtdsbqe6f4laov", # void
    "did:plc:uqndyrh6gh7rjai33ulnwvkn", # susank
    "did:plc:gfrmhdmjvxn2sjedzboeudef", # Cameron (void's admin)
    "did:plc:k644h4rq5bjfzcetgsa6tuby", # natalie.sh
    "did:plc:uxelaqoua6psz2for5amm6bp", # luna
    "did:plc:yokspuz7ha7rf5mrqmhgdtxw", # penelope
], friends = [ # Friends list - always see ALL posts from these DIDs (bypass mention requirement)
    "did:plc:yfvwmnlztr4dwkb7hwz55r2g", # orual
    #"did:plc:mxzuau6m53jtdsbqe6f4laov", # void
    "did:plc:7757w723nk675bqziinitoif", # alice (avengingfemme)
], allow_any_mentions = true, keywords = [ # Keywords to include
], languages = [ # Languages to include
], exclude_keywords = [
    # Keywords to exclude (takes precedence)
    # Example: "crypto", "nft", "airdrop"
    "patternstop",
    "p*ttern",
], exclude_dids = [
    # DIDs to exclude (takes precedence over all inclusion filters)
    # Example spam accounts would go here
    "did:plc:7iozku5btifey2a2x6lojvyk", # jerkface
    "did:plc:2xreieabu3louljggmfkgc74", # blocked pattern after informed of their nature (belt + suspenders)
    "did:plc:e6n7jxtu2qrhwvp3j6ib6sq6", # proptermalone
    "did:plc:klhtmrnregub7we7h6jwiljm", # ed3d
] }
auto_connect_firehose = true # Control when to connect

# Context sync group - runs background synchronization
[[groups]]
name = "Context Sync"
description = "Background context synchronization for constellation awareness"
# Sleeptime pattern with constellation activity tracking
pattern = { type = "sleeptime", check_interval = 300, triggers = [
    { name = "activity_sync", condition = { type = "constellation_activity", message_threshold = 10, time_threshold = 600 }, priority = "medium" },
    { name = "hourly_sync", condition = { type = "time_elapsed", duration = 3600 }, priority = "low" },
] }

# Include all the same members but without explicit roles
[[groups.members]]
agent_id = "62b14f69e29e410b826c46a829dfc378"
name = "Pattern"
config_path = "agents/pattern_config.toml"

[[groups.members]]
agent_id = "82648861bae54729849f02b02369ac54"
name = "Entropy"
config_path = "agents/entropy.toml"

[[groups.members]]
name = "Flux"
agent_id = "3f31d92f7a6f41a7af278bd783d3dd39"
config_path = "agents/flux.toml"

[[groups.members]]
agent_id = "d59a95fda24247f1849d9190d0971b9b"
name = "Archive"
config_path = "agents/archive.toml"

[[groups.members]]
agent_id = "2f381ebf6fdf4548ac6ded79f18d496c"
name = "Momentum"
config_path = "agents/momentum.toml"

[[groups.members]]
agent_id = "b134d9f4219642be8190a6eb93e9339e"
name = "Anchor"
config_path = "agents/anchor.toml"

[package]
name = "pattern-core"
version = "0.1.0"
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
description = "Core agent framework and memory system for Pattern"

[dependencies]
tokio = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
toml = { workspace = true }
miette = { workspace = true }
pattern-macros = { path = "../pattern_macros" }
thiserror = { workspace = true }
anyhow = { workspace = true }
tracing = { workspace = true }
async-trait = { workspace = true }
uuid = { workspace = true }
chrono = { workspace = true }
futures = { workspace = true }
parking_lot = { workspace = true }
dirs = { workspace = true }

# Database
surrealdb = { workspace = true }

# AI/LLM
genai = { workspace = true }

# HTTP client (for embeddings)
reqwest = { workspace = true, optional = true }

# Candle for local embeddings
candle-core = { version = "0.9", optional = true }
candle-nn = { version = "0.9", optional = true }
candle-transformers = { version = "0.9", optional = true }
hf-hub = { version = "0.4", default-features = false, features = [
    "rustls-tls",
    "tokio",
    "ureq",
], optional = true }
tokenizers = { version = "0.21", optional = true }

# Schema generation
schemars = { workspace = true }
compact_str = { version = "0.9.0", features = ["serde", "markup", "smallvec"] }
smallvec = { version = "1.15.1", features = ["serde"] }
dashmap = { version = "6.1.0", features = ["serde"] }
ferroid = { workspace = true }
rand = "0.9.2"

# DAG-CBOR and CAR archive support
# libipld = { version = "0.16", features = ["dag-cbor", "derive"] }
# iroh-car = "0.5"

# Compression for archives
zstd = { version = "0.13", optional = true }
#hyper-tls.workspace = true
ureq.workspace = true

# Local crates (to be added later)
# pattern-nd = { path = "../pattern-nd", optional = true }

[dev-dependencies]
tokio-test = "0.4"
mockall = "0.13"
pretty_assertions = "1.4"
tempfile = "3.0"
serial_test = "3.1"
tracing-test = "0.2"
trybuild = "1.0"
proc-macro2-diagnostics = "0.10"
miette = { workspace = true, features = ["fancy"] }

[features]
default = ["surreal-embedded", "embed-candle", "embed-cloud"]
nd = []                                                       # Enable neurodivergent features when pattern-nd is ready
export = ["zstd"]                                             # Agent export/import with compression

# Database backends
surreal-embedded = ["surrealdb/kv-surrealkv"]
surreal-remote = ["surrealdb/protocol-ws", "surrealdb/protocol-http"]

# Embedding backends
embed-candle = [
    "candle-core",
    "candle-nn",
    "candle-transformers",
    "hf-hub",
    "tokenizers",
]
embed-cloud = ["reqwest"]
embed-ollama = ["reqwest"]


[lints]
workspace = true
